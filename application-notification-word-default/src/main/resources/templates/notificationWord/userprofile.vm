## ---------------------------------------------------------------------------
## See the NOTICE file distributed with this work for additional
## information regarding copyright ownership.
##
## This is free software; you can redistribute it and/or modify it
## under the terms of the GNU Lesser General Public License as
## published by the Free Software Foundation; either version 2.1 of
## the License, or (at your option) any later version.
##
## This software is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
## Lesser General Public License for more details.
##
## You should have received a copy of the GNU Lesser General Public
## License along with this software; if not, write to the Free
## Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
## 02110-1301 USA, or see the FSF site: http://www.fsf.org.
## ---------------------------------------------------------------------------
## We have to force the syntax to xwiki/2.1 because of LiveData
##!source.syntax=xwiki/2.1
{{velocity}}
#set ($userReference = $doc.documentReference)
#set ($isAllowedToEdit = (!$isReadOnly && ($xcontext.userReference == $userReference || $services.security.authorization.hasAccess('admin'))))
#macro (_handleResponse $result)
  #if ($request.async)
    #jsonResponse({
      'success': $result
    })
  #else
    #set ($discard = $response.sendRedirect($doc.getURL('view', 'category=notification.word.default.userprofile')))
  #end
#end
#if ($request.method == 'POST')
  #if (!$isAllowedToEdit)
    #set ($discard = $response.sendError('403', "You don't have proper rights for this action."))
  #elseif (!$services.csrf.isTokenValid($request.form_token))
    #set ($discard = $response.sendError('401', "Bad CSRF token."))
  #else
    #if ($request.action == 'remove' && "$!request.value" != '')
      #set ($success = $services.notificationwords.removeQuery($userReference, $request.value))
      #_handleResponse($success)
    #elseif ($request.action == 'insert' && "$!request.wordsquery" != '')
      #set ($success = $services.notificationwords.insertQuery($userReference, $request.wordsquery))
      #_handleResponse($success)
    #elseif ($request.action == 'testpattern' && "$!request.wordsquery" != '' && "$!request.textToAnalyze" != '')
      #set ($localizationList = $services.notificationwords.testPattern($request.wordsquery, $request.textToAnalyze))
      #set ($regions = [])
      #foreach ($localization in $localizationList)
        #set ($discard = $regions.add({
          'start': $localization.regionStart,
          'end': $localization.regionEnd
        }))
      #end
      #jsonResponse($regions)
    #else
      #set ($discard = $response.sendError('400', "Bad argument"))
    #end
  #end
#else
{{html}}

<h1>$escapetool.xml($services.localization.render('wordsNotification.settings.title'))</h1>
<div class="box infomessage">
  $escapetool.xml($services.localization.render('wordsNotification.settings.description'))
</div>
  #set ($webJarUrl = $services.webjars.url('org.xwiki.contrib.notification-word:application-notification-word-webjar', 'userprofile.less', {'evaluate': true}))
  #set ($discard = $xwiki.linkx.use($webJarUrl, {'type': 'text/css', 'rel': 'stylesheet'}))
  #set ($discard = $xwiki.jsrx.use('templates/notificationWord/userprofile.js'))
  #if ($isAllowedToEdit)
  <h2>$escapetool.xml($services.localization.render('wordsNotification.settings.newQuery.title'))</h2>
  <form id="add-query-object" method="post" class="xformInline">
    <input type="hidden" name="form_token" value="$escapetool.xml($services.csrf.token)" />
    <input type="hidden" name="action" value="insert" />
    <label for="wordsquery" class="sr-only">
      $escapetool.xml($services.localization.render('wordsNotification.settings.add.label'))
    </label>
    <input type="text" name="wordsquery" id="wordsquery" placeholder="$escapetool.xml($services.localization.render('wordsNotification.settings.add.placeholder'))" />
    <span class="buttonwrapper">
      <input type="submit" name="addQuery" value="$escapetool.xml($services.localization.render('wordsNotification.settings.add.button'))" class="btn btn-primary" />
      <input type="button" role="button" data-toggle="collapse" href="#tryOnSample" aria-expanded="false"
             aria-controls="tryOnSample" name="openTry" value="$escapetool.xml($services.localization.render('wordsNotification.settings.add.openTry'))" class="btn btn-default" />
    </span>
    <div class="xHint">
      <span class="strong">$escapetool.xml($services.localization.render('wordsNotification.settings.add.tip'))</span>
      $escapetool.xml($services.localization.render('wordsNotification.settings.add.tip.explanation'))
    </div>
  </form>
  <div class="collapse" id="tryOnSample">
    <label for="textToAnalyze">
      $escapetool.xml($services.localization.render('wordsNotification.settings.try.textarea.label'))
    </label>
    <textarea id="textToAnalyze" class="form-control" rows="3" placeholder="$escapetool.xml($services.localization.render('wordsNotification.settings.try.textarea.placeHolder'))" />
    <input type="button" class="btn btn-default" id="tryButton" name="tryButton" value="$escapetool.xml($services.localization.render('wordsNotification.settings.try.button'))" />
    <div id="matchingResultContainer">
      <span class="no-matching-result hidden">$escapetool.xml($services.localization.render('wordsNotification.settings.try.noMatching'))</span>
      <span class="matching-results hidden"></span>
    </div>
  </div>
  #end
<h2>$escapetool.xml($services.localization.render('wordsNotification.settings.queries.title'))</h2>
{{/html}}

{{liveData
id="wordsquery-list"
source="wordsquery"
sourceParameters="currentDoc=$doc.documentReference"
properties="query,isEditable,actions"}}
{{/liveData}}
#end
{{/velocity}}